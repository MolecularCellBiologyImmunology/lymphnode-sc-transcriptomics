# Snakemake Workflow for Module 1: Generating STAR index files of a reference 
# sequence

# Include common settings
include: "../common.snakefile"

# STAR extra options
extra = ' '.join(config['params']['starindex'][config['annotationformat']])

# # Expected index files from STAR
indexfiles = ['SA','SAindex','chrLength.txt','chrName.txt','chrNameLength.txt']

# ##### Target Rules #####
# Consuming all the final output and cleaning up decompressed file
rule all:
    input:
        expand("{indexdir}/{indexfile}", 
            indexdir = config['indexdir'], 
            indexfile = indexfiles
        )

# Unpacking the compressed reference file
rule decompress:
    input:
        expand("{fastafile}.gz", fastafile = config['fastafile'])
    output:
        fastafile = temp(config['fastafile'])
    shell:
        # -k flag: keep original
        'unpigz -k {input}'

# Rule for Module 2: The alignment by STAR
rule index:
    input:
        fastapath = config['fastafile'],
        gtffile = config['gtffile']
    params:
        indexdir = config['indexdir']
    output:
        expand("{indexdir}/{indexfile}",
            indexdir = config['indexdir'], 
            indexfile = indexfiles
        )
    threads:
        8
    shell:
        'STAR --runThreadN {threads} --runMode genomeGenerate --genomeDir {params.indexdir} --genomeFastaFiles {input.fastapath} --sjdbGTFfile {input.gtffile} {extra}'