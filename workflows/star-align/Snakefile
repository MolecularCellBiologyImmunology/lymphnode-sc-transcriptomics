# Snakemake Workflow for Module 2: Aligning sequences with STAR Index Files

# Include common settings
include: "../common.snakefile"

##### Functions Producing Input #####
# construct path to a fastq sequence file
def get_fastq(wildcards):
    seqbase = os.path.join(config['data'], config['sequences'], '')
    path = seqbase + "{fileprefix}{filesuffix}".format( 
                filesuffix=config['filesuffix']['align'][0], **wildcards)
    return path

##### target rules #####
# pseudorule consuming all the final output
rule all:
    input:
        expand('{tmpstore}/star-align/{fileprefix}/Aligned.out.bam', tmpstore=tmpstore, fileprefix=samples['fileprefix'])

# the alignment by STAR
rule align:
    input:
        fq = get_fastq
        #fq = os.path.join(config['data'], config['sequences'], '') + "{fileprefix}{filesuffix}".format(fileprefix = expand('{fileprefix}', fileprefix = fileprefixes), filesuffix=config['filesuffix']['align'][0])
    output:
        expand('{tmpstore}/star-align/{fileprefix}/Aligned.out.bam', tmpstore=tmpstore, fileprefix=samples['fileprefix'])
    params:
        index = indexdir,
        extra = ' '.join(config['params']['star'])
    threads: 24
    script: 'scripts/STAR_align.py'

# Loading a STAR index file is time-consuming. We therefore use the option
# in STAR to load the index in memory once for all sequence files that must 
# be mapped against the same genome
onstart:
    print('Loading the genome index file')
    shell('STAR --genomeLoad LoadAndExit --genomeDir ' + indexdir)

# Remove the index from memory when finished mapping all sequence files
onsuccess:
    print('Removing the genome index file from memory')
    shell('STAR --genomeLoad Remove --genomeDir ' + indexdir)

# Remove the index from memory when exiting due to an error
onerror:
    print('Removing the genome index file from memory')
    shell('STAR --genomeLoad Remove --genomeDir ' + indexdir)
