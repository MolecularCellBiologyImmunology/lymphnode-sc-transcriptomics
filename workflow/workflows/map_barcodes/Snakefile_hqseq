import pandas as pd
from snakemake.utils import min_version
import os.path
# from common.utils import generate_path

##### set minimum snakemake version #####
min_version("5.2.4")

##### load config and annotations #####

configfile: "../../config.yaml"

##### annotations #####
# file with sample annotations
annotationfile = os.path.join(config['data'], config['repo'], config['samples'])
samples = pd.read_table(annotationfile).set_index('fileprefix', drop=False)
if config['istest']:
    samples = samples.loc[config['testset']]

# file with reference genome annotations
referencefile = os.path.join(config['data'], config['repo'], config['references'])
references = pd.read_table(referencefile).set_index('reference', drop=False)

# other paths
tmpstore = os.path.join(config['data'], config['tmpstore'])
gtffile = os.path.join(config['data'], config['refdir'], config['reference'], references.loc[config['reference'], 'gtffile'])

##### target rules #####
# pseudorule consuming ALL the final output
rule all:
    input:
        expand("{tmpstore}/mapping/{reference}/{fileprefix}.txt.gz",
               fileprefix=samples['fileprefix'], reference=config['reference'], tmpstore=tmpstore)

# extract the barcodes
rule map_barcodes:
    input:
        '{tmpstore}/codecounts-cell/{fileprefix}.txt',
        '{tmpstore}/align/{reference}/star-align/{fileprefix}/Aligned.out.bam',
        gtffile
    output:
        '{tmpstore}/mapping/{reference}/{fileprefix}.txt'
    script: 'scripts/map_barcodes_to_genes.py'

# zip the cell counts
rule zip:
    input:
        "{tmpstore}/mapping/{reference}/{fileprefix}.txt" 
    output:
        "{tmpstore}/mapping/{reference}/{fileprefix}.txt.gz" 
    shell:
        "pigz -p {threads} {input}"
