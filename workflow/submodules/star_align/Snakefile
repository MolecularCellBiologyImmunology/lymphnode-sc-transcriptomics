# Snakemake Workflow for Module 2: Aligning sequences with STAR

# Include common settings
import os
include: "../../common.snakefile"

##### target rules #####
# pseudorule consuming all the final output
rule all:
    input:
        expand('{tmppath}/star_align/{reference}/{fileprefixes}/Aligned.out.bam', 
            tmppath = tmppath,
            reference = config['reference'],
            fileprefixes = fileprefixes)

# STAR Alignment
rule align:
    input:
        fq = expand('{seqdir}/{fileprefixes}{filesuffix}', 
            seqdir = config['seqdir'], 
            fileprefixes = fileprefixes, 
            filesuffix = config['filesuffix']['align'][0]),
        index = expand('{indexdir}/{reference}/SA', 
            indexdir = config['indexdir'], 
            reference = config['reference'])
    output: 
        expand('{tmppath}/star_align/{reference}/{fileprefixes}/Aligned.out.bam', 
        tmppath = tmppath,
        reference = config['reference'],
        fileprefixes = fileprefixes)
    params:
        indexdir = expand('{indexdir}/{reference}', 
            indexdir = config['indexdir'], 
            reference = config['reference']),
        extra = ' '.join(config['params']['star']),
        outputdir = expand('{tmppath}/star_align/{reference}',
            tmppath = tmppath,
            reference = config['reference'])
    threads: 
        8
    script: 
        'scripts/STAR_align.py'

# Loading a STAR index file is time-consuming. We therefore use the option in 
# STAR to load the index in memory once for all sequence files that must be 
# qmapped against the same genome
onstart:
    print('Loading the genome index file')
    shell('STAR --genomeLoad LoadAndExit --genomeDir ' + os.path.join(config['indexdir'], config['reference']))

# Remove the index from memory when finished mapping all sequence files
onsuccess:
    print('Removing the genome index file from memory')
    shell('STAR --genomeLoad Remove --genomeDir ' + os.path.join(config['indexdir'], config['reference']))

# Remove the index from memory when exiting due to an error
onerror:
    print('Removing the genome index file from memory')
    shell('STAR --genomeLoad Remove --genomeDir ' + os.path.join(config['indexdir'], config['reference']))
